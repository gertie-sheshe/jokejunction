import Head from "next/head";

import React from "react";
import { dehydrate, QueryClient, useQuery } from "@tanstack/react-query";

import Container from "@jokejunction/layout/Container/Container";
import { useRouter } from "next/router";

import Page from "@jokejunction/layout/Page";
import JokeEditView from "@jokejunction/views/JokeEditView";
import { getJokeById } from "@jokejunction/utils/api";
import { JOKE_BY_ID_KEY } from "@jokejunction/utils/queryKeys";

export default function EditJoke() {
  const router = useRouter();
  const { id } = router.query;

  const { data } = useQuery(JOKE_BY_ID_KEY(id), () => getJokeById(id));

  return (
    <>
      <Head>
        <title>Edit Joke</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Page>
        <main>
          <Container>
            <JokeEditView heading="Edit Joke" jokeData={data} />
          </Container>
        </main>
      </Page>
    </>
  );
}

export async function getServerSideProps({ params }) {
  const { id } = params;

  const queryClient = new QueryClient();

  await queryClient.prefetchQuery(JOKE_BY_ID_KEY(id), () =>
    getJokeById(Number(id))
  );

  return {
    props: {
      dehydratedState: dehydrate(queryClient),
    },
  };
}
